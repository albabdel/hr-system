{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/db.ts"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst MONGODB_URI = process.env.MONGODB_URI!;\nif (!MONGODB_URI) throw new Error(\"MONGODB_URI missing\");\n\nlet conn = global as unknown as { mongoose: { conn: typeof mongoose | null; promise: Promise<typeof mongoose> | null } };\nif (!conn.mongoose) conn.mongoose = { conn: null, promise: null };\n\nexport async function dbConnect() {\n  if (conn.mongoose.conn) return conn.mongoose.conn;\n  if (!conn.mongoose.promise) {\n    conn.mongoose.promise = mongoose.connect(MONGODB_URI, { dbName: \"vrs\" });\n  }\n  conn.mongoose.conn = await conn.mongoose.promise;\n  return conn.mongoose.conn;\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAC3C,IAAI,CAAC,aAAa,MAAM,IAAI,MAAM;AAElC,IAAI,OAAO;AACX,IAAI,CAAC,KAAK,QAAQ,EAAE,KAAK,QAAQ,GAAG;IAAE,MAAM;IAAM,SAAS;AAAK;AAEzD,eAAe;IACpB,IAAI,KAAK,QAAQ,CAAC,IAAI,EAAE,OAAO,KAAK,QAAQ,CAAC,IAAI;IACjD,IAAI,CAAC,KAAK,QAAQ,CAAC,OAAO,EAAE;QAC1B,KAAK,QAAQ,CAAC,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa;YAAE,QAAQ;QAAM;IACxE;IACA,KAAK,QAAQ,CAAC,IAAI,GAAG,MAAM,KAAK,QAAQ,CAAC,OAAO;IAChD,OAAO,KAAK,QAAQ,CAAC,IAAI;AAC3B","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/models/Tenant.ts"],"sourcesContent":["import { Schema, model, models } from \"mongoose\";\nconst TenantSchema = new Schema({\n  _id: { type: String }, // use slug as id\n  name: { type: String, required: true },\n  setupComplete: { type: Boolean, default: false },\n  theme: {\n    logoUrl: String,\n    primary: { type: String, default: \"#ffda47\" }\n  }\n},{ timestamps: true });\nexport default models.Tenant || model(\"Tenant\", TenantSchema);\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,eAAe,IAAI,yGAAA,CAAA,SAAM,CAAC;IAC9B,KAAK;QAAE,MAAM;IAAO;IACpB,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,eAAe;QAAE,MAAM;QAAS,SAAS;IAAM;IAC/C,OAAO;QACL,SAAS;QACT,SAAS;YAAE,MAAM;YAAQ,SAAS;QAAU;IAC9C;AACF,GAAE;IAAE,YAAY;AAAK;uCACN,yGAAA,CAAA,SAAM,CAAC,MAAM,IAAI,CAAA,GAAA,yGAAA,CAAA,QAAK,AAAD,EAAE,UAAU","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/jwt.ts"],"sourcesContent":["import jwt from \"jsonwebtoken\";\nconst SECRET = process.env.JWT_SECRET!;\nexport function signJwt(payload: object, expiresIn = \"1d\") {\n  return jwt.sign(payload, SECRET, { expiresIn });\n}\nexport function verifyJwt<T = any>(token: string) {\n  return jwt.verify(token, SECRET) as T;\n}\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,SAAS,QAAQ,GAAG,CAAC,UAAU;AAC9B,SAAS,QAAQ,OAAe,EAAE,YAAY,IAAI;IACvD,OAAO,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC,SAAS,QAAQ;QAAE;IAAU;AAC/C;AACO,SAAS,UAAmB,KAAa;IAC9C,OAAO,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO;AAC3B","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/auth.ts"],"sourcesContent":["import jwt from \"jsonwebtoken\";\nimport { cookies } from \"next/headers\";\nimport { verifyJwt } from \"./jwt\";\n\nexport type Session = { userId: string; tenantId: string; role: \"OWNER\"|\"HR_ADMIN\"|\"MANAGER\"|\"EMPLOYEE\" };\n\nexport function getSession(): Session | null {\n  const token = cookies().get(\"vrs_token\")?.value;\n  if (!token) return null;\n  try { return verifyJwt<Session>(token); } catch { return null; }\n}\n\nexport function requireRole(session: Session | null, roles: (Session[\"role\"])[]) {\n  if (!session || !roles.includes(session.role)) {\n    throw new Error(\"Forbidden\");\n  }\n}\n"],"names":[],"mappings":";;;;AACA;AACA;;;AAIO,SAAS;IACd,MAAM,QAAQ,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD,IAAI,GAAG,CAAC,cAAc;IAC1C,IAAI,CAAC,OAAO,OAAO;IACnB,IAAI;QAAE,OAAO,CAAA,GAAA,mHAAA,CAAA,YAAS,AAAD,EAAW;IAAQ,EAAE,OAAM;QAAE,OAAO;IAAM;AACjE;AAEO,SAAS,YAAY,OAAuB,EAAE,KAA0B;IAC7E,IAAI,CAAC,WAAW,CAAC,MAAM,QAAQ,CAAC,QAAQ,IAAI,GAAG;QAC7C,MAAM,IAAI,MAAM;IAClB;AACF","debugId":null}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/tenant.ts"],"sourcesContent":["export function resolveTenantId(host?: string, headerTenant?: string) {\n  if (headerTenant) return headerTenant;\n  // subdomain: acme.verifiedrecruitmentservices.com\n  const h = host || \"\";\n  const parts = h.split(\".\");\n  if (parts.length >= 3) return parts[0]; // acme\n  return \"demo\"; // fallback for local dev\n}\n"],"names":[],"mappings":";;;AAAO,SAAS,gBAAgB,IAAa,EAAE,YAAqB;IAClE,IAAI,cAAc,OAAO;IACzB,kDAAkD;IAClD,MAAM,IAAI,QAAQ;IAClB,MAAM,QAAQ,EAAE,KAAK,CAAC;IACtB,IAAI,MAAM,MAAM,IAAI,GAAG,OAAO,KAAK,CAAC,EAAE,EAAE,OAAO;IAC/C,OAAO,QAAQ,yBAAyB;AAC1C","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/tenant/status/route.ts"],"sourcesContent":["import { NextResponse, NextRequest } from \"next/server\";\nimport { dbConnect } from \"@/lib/db\";\nimport Tenant from \"@/models/Tenant\";\nimport { getSession } from \"@/lib/auth\";\nimport { resolveTenantId } from \"@/lib/tenant\";\n\nexport async function GET(req: NextRequest) {\n  await dbConnect();\n  const s = getSession();\n\n  // If there's a session, use its tenantId\n  if (s) {\n    const t = await Tenant.findById(s.tenantId).lean();\n    if (!t) return NextResponse.json({ error:{ message:\"Tenant not found\" } }, { status: 404 });\n    return NextResponse.json({ setupComplete: !!t.setupComplete, theme: t.theme, name: t.name });\n  }\n  \n  // If no session, resolve tenant from host for public pages like login\n  const host = req.headers.get(\"host\") || undefined;\n  const tenantId = resolveTenantId(host);\n  const t = await Tenant.findById(tenantId).lean();\n  \n  // On public pages, we don't know if setup is complete, but we can send theme data\n  if (t) {\n    return NextResponse.json({ setupComplete: false, theme: t.theme, name: t.name });\n  }\n\n  // Fallback for when tenant doesn't exist yet (e.g., on the registration page)\n  return NextResponse.json({ setupComplete: false, theme: {}, name: \"\" });\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEO,eAAe,IAAI,GAAgB;IACxC,MAAM,CAAA,GAAA,kHAAA,CAAA,YAAS,AAAD;IACd,MAAM,IAAI,CAAA,GAAA,oHAAA,CAAA,aAAU,AAAD;IAEnB,yCAAyC;IACzC,IAAI,GAAG;QACL,MAAM,IAAI,MAAM,yHAAA,CAAA,UAAM,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,IAAI;QAChD,IAAI,CAAC,GAAG,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAM;gBAAE,SAAQ;YAAmB;QAAE,GAAG;YAAE,QAAQ;QAAI;QACzF,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,eAAe,CAAC,CAAC,EAAE,aAAa;YAAE,OAAO,EAAE,KAAK;YAAE,MAAM,EAAE,IAAI;QAAC;IAC5F;IAEA,sEAAsE;IACtE,MAAM,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,WAAW;IACxC,MAAM,WAAW,CAAA,GAAA,sHAAA,CAAA,kBAAe,AAAD,EAAE;IACjC,MAAM,IAAI,MAAM,yHAAA,CAAA,UAAM,CAAC,QAAQ,CAAC,UAAU,IAAI;IAE9C,kFAAkF;IAClF,IAAI,GAAG;QACL,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,eAAe;YAAO,OAAO,EAAE,KAAK;YAAE,MAAM,EAAE,IAAI;QAAC;IAChF;IAEA,8EAA8E;IAC9E,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,eAAe;QAAO,OAAO,CAAC;QAAG,MAAM;IAAG;AACvE","debugId":null}}]
}