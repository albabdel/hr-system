{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/db.ts"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst MONGODB_URI = process.env.MONGODB_URI!;\nif (!MONGODB_URI) throw new Error(\"MONGODB_URI missing\");\n\nlet conn = global as unknown as { mongoose: { conn: typeof mongoose | null; promise: Promise<typeof mongoose> | null } };\nif (!conn.mongoose) conn.mongoose = { conn: null, promise: null };\n\nexport async function dbConnect() {\n  if (conn.mongoose.conn) return conn.mongoose.conn;\n  if (!conn.mongoose.promise) {\n    conn.mongoose.promise = mongoose.connect(MONGODB_URI, { dbName: \"vrs\" });\n  }\n  conn.mongoose.conn = await conn.mongoose.promise;\n  return conn.mongoose.conn;\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAC3C,IAAI,CAAC,aAAa,MAAM,IAAI,MAAM;AAElC,IAAI,OAAO;AACX,IAAI,CAAC,KAAK,QAAQ,EAAE,KAAK,QAAQ,GAAG;IAAE,MAAM;IAAM,SAAS;AAAK;AAEzD,eAAe;IACpB,IAAI,KAAK,QAAQ,CAAC,IAAI,EAAE,OAAO,KAAK,QAAQ,CAAC,IAAI;IACjD,IAAI,CAAC,KAAK,QAAQ,CAAC,OAAO,EAAE;QAC1B,KAAK,QAAQ,CAAC,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa;YAAE,QAAQ;QAAM;IACxE;IACA,KAAK,QAAQ,CAAC,IAAI,GAAG,MAAM,KAAK,QAAQ,CAAC,OAAO;IAChD,OAAO,KAAK,QAAQ,CAAC,IAAI;AAC3B","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/models/Tenant.ts"],"sourcesContent":["import { Schema, model, models } from \"mongoose\";\nconst TenantSchema = new Schema({\n  _id: { type: String }, // use slug as id\n  name: { type: String, required: true },\n  setupComplete: { type: Boolean, default: false },\n  theme: {\n    logoUrl: String,\n    primary: { type: String, default: \"#ffda47\" }\n  }\n},{ timestamps: true });\nexport default models.Tenant || model(\"Tenant\", TenantSchema);\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,eAAe,IAAI,yGAAA,CAAA,SAAM,CAAC;IAC9B,KAAK;QAAE,MAAM;IAAO;IACpB,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,eAAe;QAAE,MAAM;QAAS,SAAS;IAAM;IAC/C,OAAO;QACL,SAAS;QACT,SAAS;YAAE,MAAM;YAAQ,SAAS;QAAU;IAC9C;AACF,GAAE;IAAE,YAAY;AAAK;uCACN,yGAAA,CAAA,SAAM,CAAC,MAAM,IAAI,CAAA,GAAA,yGAAA,CAAA,QAAK,AAAD,EAAE,UAAU","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/models/User.ts"],"sourcesContent":["import { Schema, model, models } from \"mongoose\";\nconst UserSchema = new Schema({\n  tenantId: { type: String, index: true, required: true },\n  email: { type: String, index: true, required: true, unique: true },\n  name: String,\n  passwordHash: String,\n  role: { type: String, enum: [\"OWNER\",\"HR_ADMIN\",\"MANAGER\",\"EMPLOYEE\"], default: \"EMPLOYEE\" },\n},{ timestamps: true });\nexport default models.User || model(\"User\", UserSchema);\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,aAAa,IAAI,yGAAA,CAAA,SAAM,CAAC;IAC5B,UAAU;QAAE,MAAM;QAAQ,OAAO;QAAM,UAAU;IAAK;IACtD,OAAO;QAAE,MAAM;QAAQ,OAAO;QAAM,UAAU;QAAM,QAAQ;IAAK;IACjE,MAAM;IACN,cAAc;IACd,MAAM;QAAE,MAAM;QAAQ,MAAM;YAAC;YAAQ;YAAW;YAAU;SAAW;QAAE,SAAS;IAAW;AAC7F,GAAE;IAAE,YAAY;AAAK;uCACN,yGAAA,CAAA,SAAM,CAAC,IAAI,IAAI,CAAA,GAAA,yGAAA,CAAA,QAAK,AAAD,EAAE,QAAQ","debugId":null}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/jwt.ts"],"sourcesContent":["import jwt from \"jsonwebtoken\";\nconst SECRET = process.env.JWT_SECRET!;\nexport function signJwt(payload: object, expiresIn = \"1d\") {\n  return jwt.sign(payload, SECRET, { expiresIn });\n}\nexport function verifyJwt<T = any>(token: string) {\n  return jwt.verify(token, SECRET) as T;\n}\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,SAAS,QAAQ,GAAG,CAAC,UAAU;AAC9B,SAAS,QAAQ,OAAe,EAAE,YAAY,IAAI;IACvD,OAAO,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC,SAAS,QAAQ;QAAE;IAAU;AAC/C;AACO,SAAS,UAAmB,KAAa;IAC9C,OAAO,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO;AAC3B","debugId":null}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/auth/register-tenant/route.ts"],"sourcesContent":["import { dbConnect } from \"@/lib/db\";\nimport Tenant from \"@/models/Tenant\";\nimport User from \"@/models/User\";\nimport bcrypt from \"bcrypt\";\nimport { signJwt } from \"@/lib/jwt\";\nimport { NextRequest, NextResponse } from \"next/server\";\n\nexport async function POST(req: NextRequest) {\n  await dbConnect();\n  const body = await req.json().catch(() => ({}));\n  const { tenantSlug, tenantName, adminEmail, adminPassword } = body;\n  if (!tenantSlug || !tenantName || !adminEmail || !adminPassword) {\n    return NextResponse.json({ error: { message: \"Missing fields\" } }, { status: 400 });\n  }\n\n  const _id = String(tenantSlug).toLowerCase();\n  const existing = await Tenant.findById(_id).lean();\n  if (existing) {\n    return NextResponse.json({ error: { message: \"Tenant exists\" } }, { status: 409 });\n  }\n\n  await Tenant.create({ _id, name: tenantName, setupComplete: false, theme: { primary: \"#ffda47\" } });\n  const passwordHash = await bcrypt.hash(adminPassword, 12);\n  const user = await User.create({\n    tenantId: _id,\n    email: String(adminEmail).toLowerCase(),\n    name: \"Admin\",\n    passwordHash,\n    role: \"OWNER\",\n  });\n\n  const token = signJwt({ userId: String(user._id), tenantId: _id, role: \"OWNER\" });\n  const res = NextResponse.json({ ok: true, tenantId: _id });\n  res.cookies.set(\"vrs_token\", token, {\n    httpOnly: true,\n    sameSite: \"lax\",\n    path: \"/\",\n    secure: process.env.NODE_ENV === \"production\",\n    maxAge: 60 * 60 * 24 * 7, // 1 week\n  });\n  return res;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEO,eAAe,KAAK,GAAgB;IACzC,MAAM,CAAA,GAAA,kHAAA,CAAA,YAAS,AAAD;IACd,MAAM,OAAO,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC,CAAC,CAAC;IAC7C,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,aAAa,EAAE,GAAG;IAC9D,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,cAAc,CAAC,eAAe;QAC/D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;gBAAE,SAAS;YAAiB;QAAE,GAAG;YAAE,QAAQ;QAAI;IACnF;IAEA,MAAM,MAAM,OAAO,YAAY,WAAW;IAC1C,MAAM,WAAW,MAAM,yHAAA,CAAA,UAAM,CAAC,QAAQ,CAAC,KAAK,IAAI;IAChD,IAAI,UAAU;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;gBAAE,SAAS;YAAgB;QAAE,GAAG;YAAE,QAAQ;QAAI;IAClF;IAEA,MAAM,yHAAA,CAAA,UAAM,CAAC,MAAM,CAAC;QAAE;QAAK,MAAM;QAAY,eAAe;QAAO,OAAO;YAAE,SAAS;QAAU;IAAE;IACjG,MAAM,eAAe,MAAM,qGAAA,CAAA,UAAM,CAAC,IAAI,CAAC,eAAe;IACtD,MAAM,OAAO,MAAM,uHAAA,CAAA,UAAI,CAAC,MAAM,CAAC;QAC7B,UAAU;QACV,OAAO,OAAO,YAAY,WAAW;QACrC,MAAM;QACN;QACA,MAAM;IACR;IAEA,MAAM,QAAQ,CAAA,GAAA,mHAAA,CAAA,UAAO,AAAD,EAAE;QAAE,QAAQ,OAAO,KAAK,GAAG;QAAG,UAAU;QAAK,MAAM;IAAQ;IAC/E,MAAM,MAAM,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,IAAI;QAAM,UAAU;IAAI;IACxD,IAAI,OAAO,CAAC,GAAG,CAAC,aAAa,OAAO;QAClC,UAAU;QACV,UAAU;QACV,MAAM;QACN,QAAQ,oDAAyB;QACjC,QAAQ,KAAK,KAAK,KAAK;IACzB;IACA,OAAO;AACT","debugId":null}}]
}